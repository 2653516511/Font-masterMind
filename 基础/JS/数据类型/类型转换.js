
[] == ![]       //true  []转换为数字：0；![](该类型的写法)首先转换为布尔值，引用类型转换为布尔类型都为true，所以![]为false，转换为数字：0。所以返回true
console.log([] == ![] );

/** 1. js中的类型转换有几种？
 * 有三种：
 *      -转换成数字
 *      -转换成字符
 *      -转换成布尔值
 *
 * 转换规则：
 *      -转换成数字：(有数字转换为数字，非数字NaN)
 *          -基本类型：string -> 数字：'1' => 1, 'a' => NaN
 *                    null -> 数字: 0
 *                    Symbol -> 数字：抛出错误 【为什么呢？？】
 *          -引用类型：数组 -> 数字：空数组 => 0; 存在一个元素且为数字 => 数字; 其他情况 => NaN
 *                    其他引用类型 => NaN
 *      -转换成字符：
 *          -基本类型：number => 字符：12 => '12'
 *                    boolean, Symbol => 字符：'true'
 *          -引用类型：函数 => 字符：'true'
 *                    数组 => 字符：[1,2,3] => '1,2,3'
 *                    对象 => 字符：'[object Object]'  这里其实调用的是对象的toString方法
 *      -转换成布尔值：
 *          -基本类型：number => 布尔值：除了0，-0，NaN，其余都为TRUE
 *                    string => 布尔值：除了空字符串，其余的都为TRUE
 *                    null, undefined => 布尔值：FALSE
 *          -引用类型：TRUE
 */

/** 2. == 和 === 的区别
 *  === 值&类型 都需相等
 *  == 值相等即可，类型无需相等，在比较时，会进行类型的转换；
 *   ==的类型转换：
 *      -类型相等，直接比较值
 *      -
 */
